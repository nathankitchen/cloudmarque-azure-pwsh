variables:
  moduleName: Cloudmarque.Azure
  environment: Integration

stages:

- stage: Core
  jobs:
  - job:
    steps:
    - task: AzurePowerShell@5
      inputs:
        azureSubscription: $(ServiceConnection)
        workingDirectory: $(Build.SourcesDirectory)
        pwsh: true
        errorActionPreference: Stop
        ScriptType: InlineScript
        FailOnStandardError: true
        azurePowerShellVersion: 'LatestVersion'
        Inline: |

          ./Initialise-Cloudmarque.ps1 `
            -ProjectDirectory "$(Build.SourcesDirectory)" `
            -Environment "$(environment)" `
            -BuildNumber "$(Build.BuildNumber)" `
            -RepositoryName "$(Build.Repository.Name)" `
            -DefinitionName "$(Build.DefinitionName)" `
            -DefinitionVersion "$(Build.DefinitionVersion)" `
            -Verbose

          New-CmazCore -SettingsFile "$(Build.SourcesDirectory)/$(moduleName)/Resources/Project/Integration/core.yml" -Verbose

- stage: Paas
  dependsOn: Core
  jobs:
  - job:
    steps:
    - task: AzurePowerShell@5
      inputs:
        azureSubscription: $(ServiceConnection)
        workingDirectory: $(Build.SourcesDirectory)
        pwsh: true
        errorActionPreference: Stop
        ScriptType: InlineScript
        FailOnStandardError: true
        azurePowerShellVersion: 'LatestVersion'
        Inline: |

          ./Initialise-Cloudmarque.ps1 `
            -ProjectDirectory "$(Build.SourcesDirectory)" `
            -Environment "development" `
            -BuildNumber "$(Build.BuildNumber)" `
            -RepositoryName "$(Build.Repository.Name)" `
            -DefinitionName "$(Build.DefinitionName)" `
            -DefinitionVersion "$(Build.DefinitionVersion)" `
            -Verbose

          # Below resources are not being deployed because of known cdn api issue with Set-AzResource in Set-CmAzTag
          # New-CmazPaasWeb -SettingsFile "$(Build.SourcesDirectory)/$(moduleName)/Resources/Project/Integration/web.yml" -Verbose
          # New-CmazPaasWebStatic -SettingsFile "$(Build.SourcesDirectory)/$(moduleName)/Resources/Project/Integration/webstatic.yml" -Verbose

          New-AzResourceGroup -Name "Web-Test-Rg" -location uksouth -tag @{'cm-service' = "Web-Test-Rg"; 'cm-integration-test-delete' = "true" } -Force
          New-CmazPaasSql -SettingsFile "$(Build.SourcesDirectory)/$(moduleName)/Resources/Project/Integration/sql.yml" -Verbose

- stage: Iaas
  dependsOn: Core
  jobs:
  - job: IaasNetwork
    displayName: Iaas - Networking
    steps:
    - task: AzurePowerShell@5
      inputs:
        azureSubscription: $(ServiceConnection)
        workingDirectory: $(Build.SourcesDirectory)
        pwsh: true
        errorActionPreference: Stop
        ScriptType: InlineScript
        FailOnStandardError: true
        azurePowerShellVersion: 'LatestVersion'
        Inline: |

          ./Initialise-Cloudmarque.ps1 `
            -ProjectDirectory "$(Build.SourcesDirectory)" `
            -Environment "$(environment)" `
            -BuildNumber "$(Build.BuildNumber)" `
            -RepositoryName "$(Build.Repository.Name)" `
            -DefinitionName "$(Build.DefinitionName)" `
            -DefinitionVersion "$(Build.DefinitionVersion)" `
            -Verbose

          New-CmAzIaasStorage -SettingsFile "$(Build.SourcesDirectory)/$(moduleName)/Resources/Project/Integration/storage.yml" -Verbose

          New-CmAzIaasNetworking `
            -VnetsCsvFile "$(Build.SourcesDirectory)/$(moduleName)/Resources/Project/Integration/networking/csv/vnet.csv" `
            -RouteTablesCsvFile "$(Build.SourcesDirectory)/$(moduleName)/Resources/Project/Integration/networking/csv/udr.csv" `
            -NsgsCsvFile "$(Build.SourcesDirectory)/$(moduleName)/Resources/Project/Integration/networking/csv/nsg.csv" `
            -Verbose `
            -Confirm:$false

  - job: IaasVmPatchVault
    dependsOn: IaasNetwork
    displayName: Iaas - Vms, Recovery Vaults and Patching
    steps:
    - task: AzurePowerShell@5
      inputs:
        azureSubscription: $(ServiceConnection)
        workingDirectory: $(Build.SourcesDirectory)
        pwsh: true
        errorActionPreference: Stop
        ScriptType: InlineScript
        FailOnStandardError: true
        azurePowerShellVersion: 'LatestVersion'
        Inline: |

          ./Initialise-Cloudmarque.ps1 `
            -ProjectDirectory "$(Build.SourcesDirectory)" `
            -Environment "$(environment)" `
            -BuildNumber "$(Build.BuildNumber)" `
            -RepositoryName "$(Build.Repository.Name)" `
            -DefinitionName "$(Build.DefinitionName)" `
            -DefinitionVersion "$(Build.DefinitionVersion)" `
            -Verbose

          New-CmAzIaasVm `
            -SettingsFile "$(Build.SourcesDirectory)/$(moduleName)/Resources/Project/Integration/virtualmachines.yml" `
            -LocalAdminUsername (ConvertTo-SecureString $(AdminUsername) -AsPlainText -Force) `
            -LocalAdminPassword (ConvertTo-SecureString $(AdminPassword) -AsPlainText -Force) `
            -Verbose

          New-CmAzIaasRecoveryServicesVault `
            -SettingsFile "$(Build.SourcesDirectory)/$(moduleName)/Resources/Project/Integration/recoveryvault.yml" `
            -PolicySettingsFile "$(Build.SourcesDirectory)/$(moduleName)/Resources/Project/Integration/recoverypolicy.yml" `
            -Verbose

          Set-CmAzIaasUpdateManagement -SettingsFile "$(Build.SourcesDirectory)/$(moduleName)/Resources/Project/Integration/updateManagement.yml" -Verbose

  - job: IaasBastionVPN
    dependsOn: IaasNetwork
    displayName: Iaas - Bastion Host and VPN Gateway
    steps:
    - task: AzurePowerShell@5
      inputs:
        azureSubscription: $(ServiceConnection)
        workingDirectory: $(Build.SourcesDirectory)
        pwsh: true
        errorActionPreference: Stop
        ScriptType: InlineScript
        FailOnStandardError: true
        azurePowerShellVersion: 'LatestVersion'
        Inline: |

          ./Initialise-Cloudmarque.ps1 `
            -ProjectDirectory "$(Build.SourcesDirectory)" `
            -Environment "$(environment)" `
            -BuildNumber "$(Build.BuildNumber)" `
            -RepositoryName "$(Build.Repository.Name)" `
            -DefinitionName "$(Build.DefinitionName)" `
            -DefinitionVersion "$(Build.DefinitionVersion)"  `
            -Verbose

          New-CmAzIaasBastionHost -SettingsFile "$(Build.SourcesDirectory)/$(moduleName)/Resources/Project/Integration/bastionHost.yml" -Verbose
          New-CmAzIaasVpnGw -SettingsFile "$(Build.SourcesDirectory)/$(moduleName)/Resources/Project/Integration/vpngw.yml" -Verbose

- stage: Security
  dependsOn: Core
  jobs:
  - job:
    steps:
    - task: AzurePowerShell@5
      inputs:
        azureSubscription: $(ServiceConnection)
        workingDirectory: $(Build.SourcesDirectory)
        pwsh: true
        errorActionPreference: Stop
        ScriptType: InlineScript
        FailOnStandardError: true
        azurePowerShellVersion: 'LatestVersion'
        Inline: |

          ./Initialise-Cloudmarque.ps1 `
            -ProjectDirectory "$(Build.SourcesDirectory)" `
            -Environment "$(environment)" `
            -BuildNumber "$(Build.BuildNumber)" `
            -RepositoryName "$(Build.Repository.Name)" `
            -DefinitionName "$(Build.DefinitionName)" `
            -DefinitionVersion "$(Build.DefinitionVersion)" `
            -Verbose

          Set-CmAzSecurityCentre -SettingsFile "$(Build.SourcesDirectory)/$(moduleName)/Resources/Project/Integration/security.yml" -Verbose

- stage: TearDown
  dependsOn: [
    "Iaas",
    "Paas",
    "Security"
  ]
  condition: always()
  displayName: Tear Down
  jobs:
  - job:
    steps:
     - task: AzurePowerShell@5
       inputs:
        azureSubscription: $(ServiceConnection)
        workingDirectory: $(Build.SourcesDirectory)
        pwsh: true
        errorActionPreference: Stop
        ScriptType: InlineScript
        FailOnStandardError: true
        azurePowerShellVersion: 'LatestVersion'
        Inline: |

          ./Initialise-Cloudmarque.ps1 `
            -ProjectDirectory "$(Build.SourcesDirectory)" `
            -Environment "$(environment)" `
            -BuildNumber "$(Build.BuildNumber)" `
            -RepositoryName "$(Build.Repository.Name)" `
            -DefinitionName "$(Build.DefinitionName)" `
            -DefinitionVersion "$(Build.DefinitionVersion)" `
            -Verbose

          Write-Verbose "Resetting security membership..."
          $resourceTypes = @("VirtualMachines", "AppServices", "SqlServers", "SqlServerVirtualMachines", "StorageAccounts", "KubernetesService", "ContainerRegistry", "KeyVaults")

          forEach ($resourceType in $resourceTypes) {
              Set-AzSecurityPricing -Name $resourceType -PricingTier "Free"
          }

          do {

            Write-Verbose "Removing tagged resources..."
            $errorThrown = $false

            Write-Verbose "Fetching resource groups.."
            $resources = Get-CmAzService -ServiceKey "cm-integration-test-delete" -Service "true" -IsResourceGroup -Verbose

            foreach ($resource in $resources) {

              try {
                Remove-AzResourceGroup -Name $resource.resourceGroupName -Verbose -Force
              }
              catch {
                $errorThrown = $true
              }
            }

          }
          while ($errorThrown)